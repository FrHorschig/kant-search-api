openapi: 3.0.0
info:
  title: KantSearch API
  description: The API for reading data from the KantSearch backend.
  version: 0.50.0
servers:
  - url: https://localhost:3000/api/v1
tags:
  - name: Read
    description: operations to text data
  - name: Search
    description: operations for searching
paths:
  /volumes:
    get:
      tags:
        - Read
      operationId: getVolumes
      summary: Get the data of all volumes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Volume"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workCode}/footnotes:
    get:
      tags:
        - Read
      operationId: getFootnotes
      summary: Get the data of all footnotes of a work
      parameters:
        - in: path
          name: workCode
          required: true
          schema:
            $ref: "#/components/schemas/WorkCode"
          description: code of the work
        - in: query
          name: ordinals
          required: false
          schema:
            type: array
            items:
              type: integer
          explode: false
          description: The ordinals of the wanted footnotes, skip if all are needed
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Footnote"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workCode}/headings:
    get:
      tags:
        - Read
      operationId: getHeadings
      summary: Get the data of all headings of a work
      parameters:
        - in: path
          name: workCode
          required: true
          schema:
            $ref: "#/components/schemas/WorkCode"
          description: code of the work
        - in: query
          name: ordinals
          required: false
          schema:
            type: array
            items:
              type: integer
          explode: false
          description: The ordinals of the wanted headings, skip if all are needed
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Heading"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workCode}/paragraphs:
    get:
      tags:
        - Read
      operationId: getParagraphs
      summary: Get the data of all paragraphs of a work
      parameters:
        - in: path
          name: workCode
          required: true
          schema:
            $ref: "#/components/schemas/WorkCode"
          description: code of the work
        - in: query
          name: ordinals
          required: false
          schema:
            type: array
            items:
              type: integer
          explode: false
          description: The ordinals of the wanted paragraphs, skip if all are needed
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Paragraph"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workCode}/summaries:
    get:
      tags:
        - Read
      operationId: getSummaries
      summary: Get the data of all summaries of a work
      parameters:
        - in: path
          name: workCode
          required: true
          schema:
            $ref: "#/components/schemas/WorkCode"
          description: code of the work
        - in: query
          name: ordinals
          required: false
          schema:
            type: array
            items:
              type: integer
          explode: false
          description: The ordinals of the wanted summaries, skip if all are needed
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Summary"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /search:
    post:
      tags:
        - Search
      operationId: search
      summary: Post the search criteria
      requestBody:
        description: The search criteria
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchCriteria"
      responses:
        "200":
          description: Returns the search results, the array is empty if no result is found. The list or results is given in the same order as the input workCodes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  responses:
    BadRequest:
      description: The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, size too large, invalid request message framing, or deceptive request routing).
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    NotFound:
      description: The requested resource could not be found but may be available in the future.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    InternalServerError:
      description: A generic error, given when an unexpected condition was encountered and no more specific message is suitable.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
  schemas:
    ErrorCode:
      type: integer
      minimum: 400
      maximum: 599
    ErrorMessage:
      type: string
      enum:
        - BAD_REQUEST.GENERIC
        - BAD_REQUEST.INVALID_SEARCH_CRITERIA
        - BAD_REQUEST.EMPTY_WORKS_SELECTION
        - BAD_REQUEST.EMPTY_SEARCH_TERMS
        - BAD_REQUEST.SYNTAX.WRONG_STARTING_CHAR
        - BAD_REQUEST.SYNTAX.UNEXPECTED_TOKEN
        - BAD_REQUEST.SYNTAX.UNEXPECTED_END_OF_INPUT
        - BAD_REQUEST.SYNTAX.MISSING_CLOSING_PARENTHESIS
        - BAD_REQUEST.SYNTAX.WRONG_ENDING_CHAR
        - BAD_REQUEST.SYNTAX.UNTERMINATED_DOUBLE_QUOTE
        - NOT_FOUND.GENERIC
        - NOT_FOUND.VOLUMES
        - NOT_FOUND.WORK
    Footnote:
      type: object
      required:
        - ordinal
        - ref
        - text
      properties:
        ordinal:
          $ref: "#/components/schemas/NaturalNumber"
        ref:
          type: string
        text:
          type: string
    Heading:
      type: object
      required:
        - fnRefs
        - ordinal
        - pages
        - text
        - tocText
      properties:
        fnRefs:
          type: array
          items:
            $ref: "#/components/schemas/WorkCode"
        ordinal:
          $ref: "#/components/schemas/NaturalNumber"
        pages:
          type: array
          items:
            $ref: "#/components/schemas/NaturalNumber"
        text:
          type: string
        tocText:
          type: string
    Hit:
      type: object
      required:
        - fmtText
        - ordinal
        - pages
        - rawText
        - snippets
        - wordIndexMap
      properties:
        fmtText:
          type: string
        ordinal:
          $ref: "#/components/schemas/NaturalNumber"
        pages:
          type: array
          items:
            $ref: "#/components/schemas/NaturalNumber"
        rawText:
          type: string
        snippets:
          type: array
          items:
            type: string
        wordIndexMap:
          type: object
          additionalProperties:
            type: integer
    HttpError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          $ref: "#/components/schemas/ErrorMessage"
        params:
          type: array
          items:
            type: string
    NaturalNumber:
      type: integer
      minimum: 1
    Paragraph:
      type: object
      required:
        - fnRefs
        - ordinal
        - text
      properties:
        fnRefs:
          type: array
          items:
            type: string
        ordinal:
          $ref: "#/components/schemas/NaturalNumber"
        text:
          type: string
        summaryRef:
          type: string
    SearchCriteria:
      type: object
      required:
        - options
        - searchTerms
      properties:
        options:
          $ref: "#/components/schemas/SearchOptions"
        searchTerms:
          type: string
          maxLength: 10000
    SearchOptions:
      type: object
      required:
        - includeHeadings
        - includeFootnotes
        - includeSummaries
        - scope
        - withStemming
        - workCodes
      properties:
        includeHeadings:
          type: boolean
        includeFootnotes:
          type: boolean
        includeSummaries:
          type: boolean
        scope:
          $ref: "#/components/schemas/SearchScope"
        withStemming:
          type: boolean
        workCodes:
          type: array
          items:
            $ref: "#/components/schemas/WorkCode"
    SearchResult:
      type: object
      required:
        - hits
        - workCode
      properties:
        hits:
          type: array
          items:
            $ref: "#/components/schemas/Hit"
        workCode:
          $ref: "#/components/schemas/WorkCode"
    SearchScope:
      type: string
      enum:
        - PARAGRAPH
    Section:
      type: object
      required:
        - heading
      properties:
        heading:
          $ref: "#/components/schemas/NaturalNumber"
        paragraphs:
          type: array
          items:
            $ref: "#/components/schemas/NaturalNumber"
        sections:
          type: array
          items:
            $ref: "#/components/schemas/Section"
    Summary:
      type: object
      required:
        - ordinal
        - ref
        - text
      properties:
        fnRefs:
          type: array
          items:
            type: string
        ordinal:
          $ref: "#/components/schemas/NaturalNumber"
        ref:
          type: string
        text:
          type: string
    Volume:
      type: object
      required:
        - section
        - title
        - volumeNumber
        - works
      properties:
        section:
          $ref: "#/components/schemas/VolumeSection"
        title:
          type: string
        volumeNumber:
          $ref: "#/components/schemas/VolumeNumber"
        works:
          type: array
          items:
            $ref: "#/components/schemas/Work"
    VolumeNumber:
      type: integer
      minimum: 1
      maximum: 23
    VolumeSection:
      type: integer
      minimum: 1
      maximum: 3
    Work:
      type: object
      required:
        - code
        - sections
        - ordinal
        - title
      properties:
        abbreviation:
          type: string
        code:
          $ref: "#/components/schemas/WorkCode"
        paragraphs:
          type: array
          items:
            $ref: "#/components/schemas/NaturalNumber"
        sections:
          type: array
          items:
            $ref: "#/components/schemas/Section"
        ordinal:
          $ref: "#/components/schemas/NaturalNumber"
        title:
          type: string
        year:
          type: string
    WorkCode:
      type: string
