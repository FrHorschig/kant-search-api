openapi: 3.0.0
info:
  title: KantSearch API
  description: The API for reading data from the KantSearch backend.
  version: 0.20.0
servers:
  - url: https://localhost:3000/api/v1
tags:
  - name: Read
    description: operations to load full texts
paths:
  /volumes:
    get:
      tags:
        - Read
      operationId: getVolumes
      summary: Get the data of all volumes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Volume"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workId}:
    get:
      tags:
        - Read
      operationId: getWork
      summary: Get the data of a work
      parameters:
        - in: path
          name: workId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
          description: ID of the work
      responses:
        "200":
          description: Returns the metadata and the structural data of the work
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Work"
        "204":
          description: The server successfully processed the request, and is not returning any content.
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workId}/footnotes:
    get:
      tags:
        - Read
      operationId: getFootnotes
      summary: Get the data of all footnotes of a work
      parameters:
        - in: path
          name: workId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
          description: ID of the work
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Footnote"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workId}/headings:
    get:
      tags:
        - Read
      operationId: getHeadings
      summary: Get the data of all headings of a work
      parameters:
        - in: path
          name: workId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
          description: ID of the work
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Heading"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workId}/paragraphs:
    get:
      tags:
        - Read
      operationId: getParagraphs
      summary: Get the data of all paragraphs of a work
      parameters:
        - in: path
          name: workId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
          description: ID of the work
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Paragraph"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /works/{workId}/summaries:
    get:
      tags:
        - Read
      operationId: getSummaries
      summary: Get the data of all summaries of a work
      parameters:
        - in: path
          name: workId
          required: true
          schema:
            $ref: "#/components/schemas/ID"
          description: ID of the work
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Summary"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  responses:
    BadRequest:
      description: The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, size too large, invalid request message framing, or deceptive request routing).
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    NotFound:
      description: The requested resource could not be found but may be available in the future.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    InternalServerError:
      description: A generic error, given when an unexpected condition was encountered and no more specific message is suitable.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
  schemas:
    ErrorCode:
      type: integer
      minimum: 400
      maximum: 599
    Footnote:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        ref:
          type: string
        text:
          type: string
      required:
        - id
        - ref
        - text
    Heading:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        text:
          type: string
        fnRefs:
          type: array
          items:
            $ref: '#/components/schemas/ID'
      required:
        - id
        - text
        - fnRefs
    HttpError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          type: string
    ID:
      type: string
    Paragraph:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        text:
          type: string
        fnRefs:
          type: array
          items:
            $ref: '#/components/schemas/ID'
        summaryRef:
          type: string
      required:
        - id
        - text
    Section:
      type: object
      properties:
        heading:
          $ref: '#/components/schemas/ID'
        paragraphs:
          type: array
          items:
            $ref: '#/components/schemas/ID'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
      required:
        - heading
    Summary:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        ref:
          type: string
        text:
          type: string
        fnRefs:
          type: array
          items:
            type: string
      required:
        - id
        - ref
        - text
    Volume:
      type: object
      properties:
        volumeNumber:
          $ref: '#/components/schemas/VolumeNumber'
        section:
          $ref: '#/components/schemas/VolumeSection'
        title:
          type: string
        works:
          type: array
          items:
            $ref: '#/components/schemas/WorkRef'
      required:
        - volumeNumber
        - section
        - title
        - works
    VolumeNumber:
      type: integer
      minimum: 1
      maximum: 23
    VolumeSection:
      type: integer
      minimum: 1
      maximum: 3
    Work:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        code:
          type: string
        abbreviation:
          type: string
        title:
          type: string
        year:
          type: string
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
      required:
        - id
        - code
        - title
        - sections
    WorkRef:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ID'
        code:
          type: string
        title:
          type: string
      required:
        - id
        - code
        - title
