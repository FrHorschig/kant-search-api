openapi: 3.0.0
info:
  title: KantSearch API
  description: An API for the KantSearch backend.
  version: 0.3.1
servers:
  - url: https://localhost:3000/api/v1
paths:
  /upload/work:
    post:
      tags:
        - Upload
      operationId: postWork
      summary: Post the text of a single work
      requestBody:
        description: The text to upload
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        "201":
          description: Created
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /debug:
    get:
      tags:
        - Debug
      operationId: getDebugInfo
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  responses:
    BadRequest:
      description: The server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, size too large, invalid request message framing, or deceptive request routing).
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    NotFound:
      description: The requested resource could not be found but may be available in the future.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    Conflict:
      description: Indicates that the request could not be processed because of conflict in the current state of the resource, such as an edit conflict between multiple simultaneous updates.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
    InternalServerError:
      description: A generic error, given when an unexpected condition was encountered and no more specific message is suitable.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpError"
  schemas:
    ErrorCode:
      type: integer
      minimum: 100
      maximum: 599
    HttpError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          type: string
    ID:
      type: integer
      minimum: 0
    Work:
      type: object
      required:
        - title
        - abbreviation
        - text
        - aaVolume
      properties:
        title:
          type: string
        aaAbbreviation:
          type: string
        text:
          type: string
        aaVolume:
          type: integer
          minimum: 1
